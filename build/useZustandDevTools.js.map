{"version":3,"file":"useZustandDevTools.js","sourceRoot":"","sources":["../src/useZustandDevTools.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAA0B,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAiBlC,MAAM,UAAU,kBAAkB,CAAC,IAAwB;IACzD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAEnD,MAAM,MAAM,GAAG,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;IAE5D,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,EAAE,GAAG,CACT,KAAa,EACb,QAIS,EACT,EAAE,CACF,MAAM,EAAE,kBAAkB,CACxB,KAAK,EACL,KAAK,EAAE,MAAwD,EAAE,EAAE;YACjE,IAAI,CAAC;gBACH,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACtC,MAAM,EAAE,WAAW,CAAC,OAAO,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;YAClD,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,MAAM,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC,CACF,CAAC;QAEJ,MAAM,aAAa,GAAwB,EAAE,CAAC;QAE9C,aAAa,CAAC,IAAI,CAChB,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAChB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;gBACpC,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAC/B,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;QAEF,aAAa,CAAC,IAAI,CAChB,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;YAClC,IAAI,GAAG,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;gBACpE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrE,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACxC,CAAC;QACH,CAAC,CAAC,CACH,CAAC;QAEF,OAAO,GAAG,EAAE;YACV,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;gBACzC,YAAY,EAAE,MAAM,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACf,CAAC","sourcesContent":["import { useDevToolsPluginClient, type EventSubscription } from \"expo/devtools\";\nimport { useEffect } from \"react\";\nimport { StoreApi, UseBoundStore } from \"zustand\";\n\nimport { Method } from \"../method\";\n\ntype Store = UseBoundStore<StoreApi<unknown>>;\n\ntype UseZustandDevTools =\n  | {\n      name: string;\n      store: Store;\n    }\n  | {\n      name: string;\n      store: Store;\n    }[];\n\nexport function useZustandDevTools(args: UseZustandDevTools) {\n  const stores = Array.isArray(args) ? args : [args];\n\n  const client = useDevToolsPluginClient(\"zustand-dev-tools\");\n\n  useEffect(() => {\n    const on = (\n      event: Method,\n      listener: (params: {\n        store?: string;\n        key?: string;\n        value?: object;\n      }) => any\n    ) =>\n      client?.addMessageListener(\n        event,\n        async (params: { store?: string; key?: string; value?: object }) => {\n          try {\n            const result = await listener(params);\n            client?.sendMessage(`ack:${event}`, { result });\n          } catch (error) {\n            client?.sendMessage(\"error\", { error });\n          }\n        }\n      );\n\n    const subscriptions: EventSubscription[] = [];\n\n    subscriptions.push(\n      on(\"getAll\", () => {\n        return stores.map(({ name, store }) => {\n          const state = store.getState();\n          return { name, state };\n        });\n      })\n    );\n\n    subscriptions.push(\n      on(\"set\", ({ store, key, value }) => {\n        if (key !== undefined && value !== undefined && store !== undefined) {\n          return stores.find((s) => s.name === store)?.store.setState(value);\n        } else {\n          throw new Error(\"Invalid parameters\");\n        }\n      })\n    );\n\n    return () => {\n      for (const subscription of subscriptions) {\n        subscription?.remove();\n      }\n    };\n  }, [client]);\n}\n"]}